
// Flexbox values

$justify-content: (
    "fs": flex-start,
    "fe": flex-end,
    "c": center,
    "sb": space-between,
    "sa": space-around,
    "se": space-evenly,
    "ih": inherit
);

$align-items: (
    "b": baseline,
    "st": stretch,
    "fs": flex-start,
    "fe": flex-end,
    "c": center,
    "ih": inherit
);

@mixin flex($jc, $ai, $direction) {
    display: flex;
    justify-content: map-get($map: $justify-content, $key: $jc);
    align-items: map-get($map: $align-items, $key: $ai);
    flex-direction: $direction;
}

// Fluid Typography

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;

            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }

            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}

// Fluid Size

@function fluid-size($min-vw, $max-vw, $min-width-size, $max-width-size){
    @return calc(#{$min-width-size} + #{strip-unit($max-width-size - $min-width-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
}


// React-Select

@mixin react-select{
    width: 250px;
    height: 20px;
    margin-top: 15px;
    font-family: 'Poppins', sans-serif;
    font-size: 14px;

    &__control{ 
        min-height: 32px !important;
        height: 32px;
        border-color: none;
    }
    &__control--is-focused,
    &__control--menu-is-open{
        box-shadow: 0px 0px 2px 1px var(--color-enabledGray) !important;
        border-color: var(--color-enabledGray) !important;
    }
    &__value-container{
        padding: 0 !important;
    }

    &__single-value{
        padding-left: 10px !important;
    }

    &__placeholder{
        padding-left: 10px;
    }
    &__indicator {
        padding: 5px !important;
    }
}



// Css min-max implementation 

@function css-function( $function, $values... ) {
	@return 
		$function
		+ unquote( '(' )
		+ $values
		+ unquote( ')' )
	;
}

@function css-min( $values... ) {
	@return css-function( min, $values );
}

@function css-max( $values... ) {
	@return css-function( max, $values );
}

@function css-clamp( $values... ) {
	@return css-function( clamp, $values );
}

